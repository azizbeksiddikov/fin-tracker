import {
  TransactionType,
  InputSource,
  RecurringInterval,
} from "@/enums/transaction.enum";
import { Transaction, TransactionsByDate } from "@/types/transaction";

export const transactionSamples: Transaction[] = [
  {
    id: "txn_A01",
    user_id: "user_abc123",
    wallet_id: "toss",
    category_id: "food_dining",
    type: TransactionType.EXPENSE,
    title: "Lunch at Cafe",
    receiver: "Cafe Street",
    note: "Quick bite with team",
    amount: 15000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-06-20T13:00:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-06-20T12:55:00Z"),
    updated_at: new Date("2025-06-20T12:55:00Z"),
  },
  {
    id: "txn_A02",
    user_id: "user_abc123",
    wallet_id: "kb",
    category_id: "salary",
    type: TransactionType.INCOME,
    title: "Project Payment",
    receiver: "Client Solutions",
    note: "Payment for Q2 project delivery",
    amount: 1200000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-06-21T10:30:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.TABLE,
    created_at: new Date("2025-06-21T10:25:00Z"),
    updated_at: new Date("2025-06-21T10:25:00Z"),
  },
  {
    id: "txn_A03",
    user_id: "user_abc123",
    wallet_id: "cash (won)",
    category_id: "transport",
    type: TransactionType.EXPENSE,
    title: "Bus Fare",
    receiver: "City Transit",
    note: "Daily commute to work",
    amount: 1250,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-06-22T08:15:00Z"),
    is_recurring: true,
    recurring_interval: RecurringInterval.DAILY,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-06-22T08:10:00Z"),
    updated_at: new Date("2025-06-22T08:10:00Z"),
  },
  {
    id: "txn_A04",
    user_id: "user_abc123",
    wallet_id: "cash (usd)",
    category_id: null,
    type: TransactionType.BETWEEN_CARDS,
    title: "USD to KRW Exchange",
    receiver: "Toss",
    note: "Converted USD cash to KRW in Toss for travel",
    amount: 200,
    currency: "USD",
    exchange_rate: 1375, // Assuming 1 USD = 1375 KRW
    date: new Date("2025-06-23T11:00:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-06-23T10:55:00Z"),
    updated_at: new Date("2025-06-23T10:55:00Z"),
  },
  {
    id: "txn_A05",
    user_id: "user_abc123",
    wallet_id: "toss",
    category_id: "utilities",
    type: TransactionType.EXPENSE,
    title: "Internet Bill",
    receiver: "Telecom Corp.",
    note: "Monthly home internet payment",
    amount: 38500,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-06-24T14:45:00Z"),
    is_recurring: true,
    recurring_interval: RecurringInterval.MONTHLY,
    input_source: InputSource.IMAGE,
    created_at: new Date("2025-06-24T14:40:00Z"),
    updated_at: new Date("2025-06-24T14:40:00Z"),
  },
  {
    id: "txn_A06",
    user_id: "user_abc123",
    wallet_id: "kb",
    category_id: "shopping",
    type: TransactionType.EXPENSE,
    title: "Clothing Purchase",
    receiver: "Fashion Outlet",
    note: "New summer shirt",
    amount: 65000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-06-25T17:20:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-06-25T17:15:00Z"),
    updated_at: new Date("2025-06-25T17:15:00Z"),
  },
  {
    id: "txn_A07",
    user_id: "user_abc123",
    wallet_id: "cash (won)",
    category_id: "entertainment",
    type: TransactionType.EXPENSE,
    title: "Movie Tickets",
    receiver: "Cinema Palace",
    note: "Evening movie with family",
    amount: 28000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-06-26T19:00:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-06-26T18:55:00Z"),
    updated_at: new Date("2025-06-26T18:55:00Z"),
  },
  {
    id: "txn_A08",
    user_id: "user_abc123",
    wallet_id: "toss",
    category_id: "freelance_income",
    type: TransactionType.INCOME,
    title: "Graphic Design Work",
    receiver: "Design Hub",
    note: "Payment for logo design project",
    amount: 750000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-06-27T10:00:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.TABLE,
    created_at: new Date("2025-06-27T09:55:00Z"),
    updated_at: new Date("2025-06-27T09:55:00Z"),
  },
  {
    id: "txn_A09",
    user_id: "user_abc123",
    wallet_id: "kb",
    category_id: "health",
    type: TransactionType.EXPENSE,
    title: "Yoga Class",
    receiver: "Zen Studio",
    note: "Weekly yoga session",
    amount: 25000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-06-28T09:00:00Z"),
    is_recurring: true,
    recurring_interval: RecurringInterval.WEEKLY,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-06-28T08:55:00Z"),
    updated_at: new Date("2025-06-28T08:55:00Z"),
  },
  {
    id: "txn_A10",
    user_id: "user_abc123",
    wallet_id: "cash (usd)",
    category_id: "travel",
    type: TransactionType.EXPENSE,
    title: "Hotel Booking",
    receiver: "Global Stay",
    note: "Accommodation for upcoming trip",
    amount: 150,
    currency: "USD",
    exchange_rate: null,
    date: new Date("2025-06-29T16:00:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-06-29T15:55:00Z"),
    updated_at: new Date("2025-06-29T15:55:00Z"),
  },
  {
    id: "txn_A11",
    user_id: "user_abc123",
    wallet_id: "toss",
    category_id: "education",
    type: TransactionType.EXPENSE,
    title: "Language App Subscription",
    receiver: "LangLearn Inc.",
    note: "Annual subscription for learning Spanish",
    amount: 50000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-06-30T11:30:00Z"),
    is_recurring: true,
    recurring_interval: RecurringInterval.YEARLY,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-06-30T11:25:00Z"),
    updated_at: new Date("2025-06-30T11:25:00Z"),
  },
  {
    id: "txn_A12",
    user_id: "user_abc123",
    wallet_id: "kb",
    category_id: null,
    type: TransactionType.BETWEEN_CARDS,
    title: "KB to Cash (Won) Transfer",
    receiver: "Cash (Won)",
    note: "Withdrew cash from KB for weekend",
    amount: 100000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-07-01T09:00:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-07-01T08:55:00Z"),
    updated_at: new Date("2025-07-01T08:55:00Z"),
  },
  {
    id: "txn_A13",
    user_id: "user_abc123",
    wallet_id: "cash (won)",
    category_id: "groceries",
    type: TransactionType.EXPENSE,
    title: "Weekly Groceries",
    receiver: "Large Mart",
    note: "Staples for the week",
    amount: 85000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-07-01T14:00:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.TABLE,
    created_at: new Date("2025-07-01T13:55:00Z"),
    updated_at: new Date("2025-07-01T13:55:00Z"),
  },
  {
    id: "txn_A14",
    user_id: "user_abc123",
    wallet_id: "toss",
    category_id: "food_dining",
    type: TransactionType.EXPENSE,
    title: "Dinner Delivery",
    receiver: "Baedal Minjok",
    note: "Ordered chicken and beer",
    amount: 28000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-07-01T19:30:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-07-01T19:25:00Z"),
    updated_at: new Date("2025-07-01T19:25:00Z"),
  },
  {
    id: "txn_A15",
    user_id: "user_abc123",
    wallet_id: "kb",
    category_id: "investments",
    type: TransactionType.EXPENSE,
    title: "Stock Purchase",
    receiver: "Securities Co.",
    note: "Investment in tech stocks",
    amount: 500000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-07-02T10:00:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-07-02T09:55:00Z"),
    updated_at: new Date("2025-07-02T09:55:00Z"),
  },
  {
    id: "txn_A16",
    user_id: "user_abc123",
    wallet_id: "cash (usd)",
    category_id: "personal_care",
    type: TransactionType.EXPENSE,
    title: "Haircut",
    receiver: "Barber Shop",
    note: "Standard haircut during trip",
    amount: 30,
    currency: "USD",
    exchange_rate: null,
    date: new Date("2025-07-02T11:45:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-07-02T11:40:00Z"),
    updated_at: new Date("2025-07-02T11:40:00Z"),
  },
  {
    id: "txn_A17",
    user_id: "user_abc123",
    wallet_id: "toss",
    category_id: "refund",
    type: TransactionType.INCOME,
    title: "App Store Refund",
    receiver: "Apple",
    note: "Refund for accidental in-app purchase",
    amount: 12000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-07-02T15:00:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-07-02T14:55:00Z"),
    updated_at: new Date("2025-07-02T14:55:00Z"),
  },
  {
    id: "txn_A18",
    user_id: "user_abc123",
    wallet_id: "kb",
    category_id: "housing",
    type: TransactionType.EXPENSE,
    title: "Rent Payment",
    receiver: "Property Manager",
    note: "July rent for apartment",
    amount: 850000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-07-02T17:00:00Z"),
    is_recurring: true,
    recurring_interval: RecurringInterval.MONTHLY,
    input_source: InputSource.TABLE,
    created_at: new Date("2025-07-02T16:55:00Z"),
    updated_at: new Date("2025-07-02T16:55:00Z"),
  },
  {
    id: "txn_A19",
    user_id: "user_abc123",
    wallet_id: "cash (won)",
    category_id: "leisure",
    type: TransactionType.EXPENSE,
    title: "Game Cafe",
    receiver: "PC Bang",
    note: "Hours at game cafe",
    amount: 8000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-07-02T20:00:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-07-02T19:55:00Z"),
    updated_at: new Date("2025-07-02T19:55:00Z"),
  },
  {
    id: "txn_A20",
    user_id: "user_abc123",
    wallet_id: "toss",
    category_id: "income",
    type: TransactionType.INCOME,
    title: "Cash Gift",
    receiver: "Family Member",
    note: "Birthday cash gift",
    amount: 150000,
    currency: "KRW",
    exchange_rate: null,
    date: new Date("2025-06-20T18:00:00Z"),
    is_recurring: false,
    recurring_interval: null,
    input_source: InputSource.MANUAL,
    created_at: new Date("2025-06-20T17:55:00Z"),
    updated_at: new Date("2025-06-20T17:55:00Z"),
  },
];

// Helper to format date for keys
const formatDateKey = (date: Date): string => {
  const d = String(date.getDate()).padStart(2, "0");
  const m = String(date.getMonth() + 1).padStart(2, "0");
  const y = date.getFullYear();
  return `${d}.${m}.${y}`;
};

export const transactionsByDate: TransactionsByDate = transactionSamples.reduce(
  (acc: TransactionsByDate, transaction: Transaction) => {
    const formattedDate = formatDateKey(transaction.date);
    if (!acc[formattedDate]) {
      acc[formattedDate] = [];
    }
    acc[formattedDate].push(transaction);
    return acc;
  },
  {}
);
